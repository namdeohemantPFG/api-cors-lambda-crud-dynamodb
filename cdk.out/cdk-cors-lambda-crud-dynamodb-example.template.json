{
  "Resources": {
    "items07D08F4B": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "itemId",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "itemId",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        },
        "TableName": "items"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/items/Resource"
      }
    },
    "getOneItemFunctionServiceRoleCFD54796": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/getOneItemFunction/ServiceRole/Resource"
      }
    },
    "getOneItemFunctionServiceRoleDefaultPolicy6B743AA8": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "items07D08F4B",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getOneItemFunctionServiceRoleDefaultPolicy6B743AA8",
        "Roles": [
          {
            "Ref": "getOneItemFunctionServiceRoleCFD54796"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/getOneItemFunction/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getOneItemFunctionE3257B22": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters38ae2b869ad5773f2a07fa7e1508b2e8449afa36f1d7e65923f39462281879d4S3BucketD844B6E5"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters38ae2b869ad5773f2a07fa7e1508b2e8449afa36f1d7e65923f39462281879d4S3VersionKey8F557212"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters38ae2b869ad5773f2a07fa7e1508b2e8449afa36f1d7e65923f39462281879d4S3VersionKey8F557212"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "getOneItemFunctionServiceRoleCFD54796",
            "Arn"
          ]
        },
        "Description": "Built on 2021-08-18",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "items07D08F4B"
            },
            "PRIMARY_KEY": "itemId",
            "DISABLE_SIGNAL_HANDLERS": "true"
          }
        },
        "Handler": "not.used.in.provided.runtime",
        "MemorySize": 1024,
        "Runtime": "provided",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "getOneItemFunctionServiceRoleDefaultPolicy6B743AA8",
        "getOneItemFunctionServiceRoleCFD54796"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/getOneItemFunction/Resource",
        "aws:asset:path": "asset.38ae2b869ad5773f2a07fa7e1508b2e8449afa36f1d7e65923f39462281879d4.zip",
        "aws:asset:property": "Code"
      }
    },
    "getAllItemsFunctionServiceRoleCC084440": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/getAllItemsFunction/ServiceRole/Resource"
      }
    },
    "getAllItemsFunctionServiceRoleDefaultPolicyF069C759": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "items07D08F4B",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "getAllItemsFunctionServiceRoleDefaultPolicyF069C759",
        "Roles": [
          {
            "Ref": "getAllItemsFunctionServiceRoleCC084440"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/getAllItemsFunction/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "getAllItemsFunction0B7A913E": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersdd81aaf65854ca7802eee8c884bca2b240e803e1ba25c6e43603435f7e28bdcdS3Bucket924A0630"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersdd81aaf65854ca7802eee8c884bca2b240e803e1ba25c6e43603435f7e28bdcdS3VersionKey46C77F5B"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersdd81aaf65854ca7802eee8c884bca2b240e803e1ba25c6e43603435f7e28bdcdS3VersionKey46C77F5B"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "getAllItemsFunctionServiceRoleCC084440",
            "Arn"
          ]
        },
        "Description": "Built on 2021-08-18",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "items07D08F4B"
            },
            "PRIMARY_KEY": "itemId",
            "DISABLE_SIGNAL_HANDLERS": "true"
          }
        },
        "Handler": "not.used.in.provided.runtime",
        "MemorySize": 1024,
        "Runtime": "provided",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "getAllItemsFunctionServiceRoleDefaultPolicyF069C759",
        "getAllItemsFunctionServiceRoleCC084440"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/getAllItemsFunction/Resource",
        "aws:asset:path": "asset.dd81aaf65854ca7802eee8c884bca2b240e803e1ba25c6e43603435f7e28bdcd.zip",
        "aws:asset:property": "Code"
      }
    },
    "createItemFunctionServiceRole1BBF2178": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/createItemFunction/ServiceRole/Resource"
      }
    },
    "createItemFunctionServiceRoleDefaultPolicy8FAF1611": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "items07D08F4B",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "createItemFunctionServiceRoleDefaultPolicy8FAF1611",
        "Roles": [
          {
            "Ref": "createItemFunctionServiceRole1BBF2178"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/createItemFunction/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "createItemFunction8D47E48A": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersea84acbcb59763656c865add02ae0d3c2387354ff84b55997df4ce787c88f77bS3Bucket60F2E380"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersea84acbcb59763656c865add02ae0d3c2387354ff84b55997df4ce787c88f77bS3VersionKey1379302F"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersea84acbcb59763656c865add02ae0d3c2387354ff84b55997df4ce787c88f77bS3VersionKey1379302F"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "createItemFunctionServiceRole1BBF2178",
            "Arn"
          ]
        },
        "Description": "Built on 2021-08-18",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "items07D08F4B"
            },
            "PRIMARY_KEY": "itemId",
            "DISABLE_SIGNAL_HANDLERS": "true"
          }
        },
        "Handler": "not.used.in.provided.runtime",
        "MemorySize": 1024,
        "Runtime": "provided",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "createItemFunctionServiceRoleDefaultPolicy8FAF1611",
        "createItemFunctionServiceRole1BBF2178"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/createItemFunction/Resource",
        "aws:asset:path": "asset.ea84acbcb59763656c865add02ae0d3c2387354ff84b55997df4ce787c88f77b.zip",
        "aws:asset:property": "Code"
      }
    },
    "updateItemFunctionServiceRole40035396": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/updateItemFunction/ServiceRole/Resource"
      }
    },
    "updateItemFunctionServiceRoleDefaultPolicy6A793729": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "items07D08F4B",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "updateItemFunctionServiceRoleDefaultPolicy6A793729",
        "Roles": [
          {
            "Ref": "updateItemFunctionServiceRole40035396"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/updateItemFunction/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "updateItemFunction59415205": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters78c6c543950d291c65bd8531ad03fec49d28be9221a7a0a3407021fc394cf013S3Bucket7CA0B04C"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters78c6c543950d291c65bd8531ad03fec49d28be9221a7a0a3407021fc394cf013S3VersionKey2C610BAB"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters78c6c543950d291c65bd8531ad03fec49d28be9221a7a0a3407021fc394cf013S3VersionKey2C610BAB"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "updateItemFunctionServiceRole40035396",
            "Arn"
          ]
        },
        "Description": "Built on 2021-08-18",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "items07D08F4B"
            },
            "PRIMARY_KEY": "itemId",
            "DISABLE_SIGNAL_HANDLERS": "true"
          }
        },
        "Handler": "not.used.in.provided.runtime",
        "MemorySize": 1024,
        "Runtime": "provided",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "updateItemFunctionServiceRoleDefaultPolicy6A793729",
        "updateItemFunctionServiceRole40035396"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/updateItemFunction/Resource",
        "aws:asset:path": "asset.78c6c543950d291c65bd8531ad03fec49d28be9221a7a0a3407021fc394cf013.zip",
        "aws:asset:property": "Code"
      }
    },
    "deleteItemFunctionServiceRole5C201FCC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/deleteItemFunction/ServiceRole/Resource"
      }
    },
    "deleteItemFunctionServiceRoleDefaultPolicyDCE46F14": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "items07D08F4B",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "deleteItemFunctionServiceRoleDefaultPolicyDCE46F14",
        "Roles": [
          {
            "Ref": "deleteItemFunctionServiceRole5C201FCC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/deleteItemFunction/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "deleteItemFunction2918B1B0": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters0910c7386f5de735275c007271606db8ec0f1a05d098c254ffc1cda683bc4924S3BucketE6566285"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0910c7386f5de735275c007271606db8ec0f1a05d098c254ffc1cda683bc4924S3VersionKey9B4567B4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0910c7386f5de735275c007271606db8ec0f1a05d098c254ffc1cda683bc4924S3VersionKey9B4567B4"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "deleteItemFunctionServiceRole5C201FCC",
            "Arn"
          ]
        },
        "Description": "Built on 2021-08-18",
        "Environment": {
          "Variables": {
            "TABLE_NAME": {
              "Ref": "items07D08F4B"
            },
            "PRIMARY_KEY": "itemId",
            "DISABLE_SIGNAL_HANDLERS": "true"
          }
        },
        "Handler": "not.used.in.provided.runtime",
        "MemorySize": 1024,
        "Runtime": "provided",
        "Timeout": 30,
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "deleteItemFunctionServiceRoleDefaultPolicyDCE46F14",
        "deleteItemFunctionServiceRole5C201FCC"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/deleteItemFunction/Resource",
        "aws:asset:path": "asset.0910c7386f5de735275c007271606db8ec0f1a05d098c254ffc1cda683bc4924.zip",
        "aws:asset:property": "Code"
      }
    },
    "itemsApi28111E1C": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "Items Service"
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/itemsApi/Resource"
      }
    },
    "itemsApiCloudWatchRoleB5C7B431": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/itemsApi/CloudWatchRole/Resource"
      }
    },
    "itemsApiAccount591BF3E1": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "itemsApiCloudWatchRoleB5C7B431",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "itemsApi28111E1C"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/itemsApi/Account"
      }
    },
    "itemsApiDeploymentFEC31BD0c6f17f806dc94be5ec60ec3f93f97425": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "itemsApi28111E1C"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "itemsApiitemsidDELETE21550005",
        "itemsApiitemsidGET38A333A8",
        "itemsApiitemsidOPTIONS62BD91D0",
        "itemsApiitemsidPATCH0548CB6A",
        "itemsApiitemsidA29927C2",
        "itemsApiitemsGET59B0F78A",
        "itemsApiitemsOPTIONSB46B4D53",
        "itemsApiitemsPOSTDD3E83D0",
        "itemsApiitems9015DBED"
      ],
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/itemsApi/Deployment/Resource"
      }
    },
    "itemsApiDeploymentStageprodE77B897D": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "itemsApi28111E1C"
        },
        "DeploymentId": {
          "Ref": "itemsApiDeploymentFEC31BD0c6f17f806dc94be5ec60ec3f93f97425"
        },
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/itemsApi/DeploymentStage.prod/Resource"
      }
    },
    "itemsApiitems9015DBED": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "itemsApi28111E1C",
            "RootResourceId"
          ]
        },
        "PathPart": "items",
        "RestApiId": {
          "Ref": "itemsApi28111E1C"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/itemsApi/Default/items/Resource"
      }
    },
    "itemsApiitemsGETApiPermissioncdkcorslambdacruddynamodbexampleitemsApiBC9B8415GETitems4B80D3BC": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getAllItemsFunction0B7A913E",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "itemsApi28111E1C"
              },
              "/",
              {
                "Ref": "itemsApiDeploymentStageprodE77B897D"
              },
              "/GET/items"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/itemsApi/Default/items/GET/ApiPermission.cdkcorslambdacruddynamodbexampleitemsApiBC9B8415.GET..items"
      }
    },
    "itemsApiitemsGETApiPermissionTestcdkcorslambdacruddynamodbexampleitemsApiBC9B8415GETitems1AB2C61A": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getAllItemsFunction0B7A913E",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "itemsApi28111E1C"
              },
              "/test-invoke-stage/GET/items"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/itemsApi/Default/items/GET/ApiPermission.Test.cdkcorslambdacruddynamodbexampleitemsApiBC9B8415.GET..items"
      }
    },
    "itemsApiitemsGET59B0F78A": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "itemsApiitems9015DBED"
        },
        "RestApiId": {
          "Ref": "itemsApi28111E1C"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getAllItemsFunction0B7A913E",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/itemsApi/Default/items/GET/Resource"
      }
    },
    "itemsApiitemsPOSTApiPermissioncdkcorslambdacruddynamodbexampleitemsApiBC9B8415POSTitems1A091488": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createItemFunction8D47E48A",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "itemsApi28111E1C"
              },
              "/",
              {
                "Ref": "itemsApiDeploymentStageprodE77B897D"
              },
              "/POST/items"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/itemsApi/Default/items/POST/ApiPermission.cdkcorslambdacruddynamodbexampleitemsApiBC9B8415.POST..items"
      }
    },
    "itemsApiitemsPOSTApiPermissionTestcdkcorslambdacruddynamodbexampleitemsApiBC9B8415POSTitemsED19CE90": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "createItemFunction8D47E48A",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "itemsApi28111E1C"
              },
              "/test-invoke-stage/POST/items"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/itemsApi/Default/items/POST/ApiPermission.Test.cdkcorslambdacruddynamodbexampleitemsApiBC9B8415.POST..items"
      }
    },
    "itemsApiitemsPOSTDD3E83D0": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "itemsApiitems9015DBED"
        },
        "RestApiId": {
          "Ref": "itemsApi28111E1C"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "createItemFunction8D47E48A",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/itemsApi/Default/items/POST/Resource"
      }
    },
    "itemsApiitemsOPTIONSB46B4D53": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "itemsApiitems9015DBED"
        },
        "RestApiId": {
          "Ref": "itemsApi28111E1C"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/itemsApi/Default/items/OPTIONS/Resource"
      }
    },
    "itemsApiitemsidA29927C2": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "itemsApiitems9015DBED"
        },
        "PathPart": "{id}",
        "RestApiId": {
          "Ref": "itemsApi28111E1C"
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/itemsApi/Default/items/{id}/Resource"
      }
    },
    "itemsApiitemsidGETApiPermissioncdkcorslambdacruddynamodbexampleitemsApiBC9B8415GETitemsid1F950844": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getOneItemFunctionE3257B22",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "itemsApi28111E1C"
              },
              "/",
              {
                "Ref": "itemsApiDeploymentStageprodE77B897D"
              },
              "/GET/items/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/itemsApi/Default/items/{id}/GET/ApiPermission.cdkcorslambdacruddynamodbexampleitemsApiBC9B8415.GET..items.{id}"
      }
    },
    "itemsApiitemsidGETApiPermissionTestcdkcorslambdacruddynamodbexampleitemsApiBC9B8415GETitemsid7C73FB50": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "getOneItemFunctionE3257B22",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "itemsApi28111E1C"
              },
              "/test-invoke-stage/GET/items/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/itemsApi/Default/items/{id}/GET/ApiPermission.Test.cdkcorslambdacruddynamodbexampleitemsApiBC9B8415.GET..items.{id}"
      }
    },
    "itemsApiitemsidGET38A333A8": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "itemsApiitemsidA29927C2"
        },
        "RestApiId": {
          "Ref": "itemsApi28111E1C"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "getOneItemFunctionE3257B22",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/itemsApi/Default/items/{id}/GET/Resource"
      }
    },
    "itemsApiitemsidPATCHApiPermissioncdkcorslambdacruddynamodbexampleitemsApiBC9B8415PATCHitemsidDEC2AA76": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "updateItemFunction59415205",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "itemsApi28111E1C"
              },
              "/",
              {
                "Ref": "itemsApiDeploymentStageprodE77B897D"
              },
              "/PATCH/items/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/itemsApi/Default/items/{id}/PATCH/ApiPermission.cdkcorslambdacruddynamodbexampleitemsApiBC9B8415.PATCH..items.{id}"
      }
    },
    "itemsApiitemsidPATCHApiPermissionTestcdkcorslambdacruddynamodbexampleitemsApiBC9B8415PATCHitemsidE9DF0BEE": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "updateItemFunction59415205",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "itemsApi28111E1C"
              },
              "/test-invoke-stage/PATCH/items/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/itemsApi/Default/items/{id}/PATCH/ApiPermission.Test.cdkcorslambdacruddynamodbexampleitemsApiBC9B8415.PATCH..items.{id}"
      }
    },
    "itemsApiitemsidPATCH0548CB6A": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PATCH",
        "ResourceId": {
          "Ref": "itemsApiitemsidA29927C2"
        },
        "RestApiId": {
          "Ref": "itemsApi28111E1C"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "updateItemFunction59415205",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/itemsApi/Default/items/{id}/PATCH/Resource"
      }
    },
    "itemsApiitemsidDELETEApiPermissioncdkcorslambdacruddynamodbexampleitemsApiBC9B8415DELETEitemsidD1FAAE14": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deleteItemFunction2918B1B0",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "itemsApi28111E1C"
              },
              "/",
              {
                "Ref": "itemsApiDeploymentStageprodE77B897D"
              },
              "/DELETE/items/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/itemsApi/Default/items/{id}/DELETE/ApiPermission.cdkcorslambdacruddynamodbexampleitemsApiBC9B8415.DELETE..items.{id}"
      }
    },
    "itemsApiitemsidDELETEApiPermissionTestcdkcorslambdacruddynamodbexampleitemsApiBC9B8415DELETEitemsidB81F3A5C": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "deleteItemFunction2918B1B0",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "itemsApi28111E1C"
              },
              "/test-invoke-stage/DELETE/items/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/itemsApi/Default/items/{id}/DELETE/ApiPermission.Test.cdkcorslambdacruddynamodbexampleitemsApiBC9B8415.DELETE..items.{id}"
      }
    },
    "itemsApiitemsidDELETE21550005": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "ResourceId": {
          "Ref": "itemsApiitemsidA29927C2"
        },
        "RestApiId": {
          "Ref": "itemsApi28111E1C"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "deleteItemFunction2918B1B0",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/itemsApi/Default/items/{id}/DELETE/Resource"
      }
    },
    "itemsApiitemsidOPTIONS62BD91D0": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "itemsApiitemsidA29927C2"
        },
        "RestApiId": {
          "Ref": "itemsApi28111E1C"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/itemsApi/Default/items/{id}/OPTIONS/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAACk2QS07DMBCGz9K96zYgIZakRSyQEFHgAhN7CCaxHdljqijy3bEdWmU137z+eVS8qh75cfcEF78XcjgswjrkyweBGFiL3gYnkNXeI6VYr0zPztZ4ckEQO3+ZBhxoJHTZeQ80hRK+dSZO9VKRsiayPGWRswFtZceXT+jGUlIgshF0J4EvL8GI3JBTW27QaeV9kVKg+dLatb/Yxo5KzKWuUGT+fg95c8/LAcnnpyAGpBN4ZDCpHggvMCch9FRP6n/1K9ZC2GCIPeM02lmjKbdtvPySssAK16uL/PYFN35D+rYyh1aKMbJX+IVD9cCP/G7345XauzRTaeTtav8AkH07OaQBAAA="
      },
      "Metadata": {
        "aws:cdk:path": "cdk-cors-lambda-crud-dynamodb-example/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Parameters": {
    "AssetParameters38ae2b869ad5773f2a07fa7e1508b2e8449afa36f1d7e65923f39462281879d4S3BucketD844B6E5": {
      "Type": "String",
      "Description": "S3 bucket for asset \"38ae2b869ad5773f2a07fa7e1508b2e8449afa36f1d7e65923f39462281879d4\""
    },
    "AssetParameters38ae2b869ad5773f2a07fa7e1508b2e8449afa36f1d7e65923f39462281879d4S3VersionKey8F557212": {
      "Type": "String",
      "Description": "S3 key for asset version \"38ae2b869ad5773f2a07fa7e1508b2e8449afa36f1d7e65923f39462281879d4\""
    },
    "AssetParameters38ae2b869ad5773f2a07fa7e1508b2e8449afa36f1d7e65923f39462281879d4ArtifactHash0F789B93": {
      "Type": "String",
      "Description": "Artifact hash for asset \"38ae2b869ad5773f2a07fa7e1508b2e8449afa36f1d7e65923f39462281879d4\""
    },
    "AssetParametersdd81aaf65854ca7802eee8c884bca2b240e803e1ba25c6e43603435f7e28bdcdS3Bucket924A0630": {
      "Type": "String",
      "Description": "S3 bucket for asset \"dd81aaf65854ca7802eee8c884bca2b240e803e1ba25c6e43603435f7e28bdcd\""
    },
    "AssetParametersdd81aaf65854ca7802eee8c884bca2b240e803e1ba25c6e43603435f7e28bdcdS3VersionKey46C77F5B": {
      "Type": "String",
      "Description": "S3 key for asset version \"dd81aaf65854ca7802eee8c884bca2b240e803e1ba25c6e43603435f7e28bdcd\""
    },
    "AssetParametersdd81aaf65854ca7802eee8c884bca2b240e803e1ba25c6e43603435f7e28bdcdArtifactHash3DF52F87": {
      "Type": "String",
      "Description": "Artifact hash for asset \"dd81aaf65854ca7802eee8c884bca2b240e803e1ba25c6e43603435f7e28bdcd\""
    },
    "AssetParametersea84acbcb59763656c865add02ae0d3c2387354ff84b55997df4ce787c88f77bS3Bucket60F2E380": {
      "Type": "String",
      "Description": "S3 bucket for asset \"ea84acbcb59763656c865add02ae0d3c2387354ff84b55997df4ce787c88f77b\""
    },
    "AssetParametersea84acbcb59763656c865add02ae0d3c2387354ff84b55997df4ce787c88f77bS3VersionKey1379302F": {
      "Type": "String",
      "Description": "S3 key for asset version \"ea84acbcb59763656c865add02ae0d3c2387354ff84b55997df4ce787c88f77b\""
    },
    "AssetParametersea84acbcb59763656c865add02ae0d3c2387354ff84b55997df4ce787c88f77bArtifactHash455F9EB2": {
      "Type": "String",
      "Description": "Artifact hash for asset \"ea84acbcb59763656c865add02ae0d3c2387354ff84b55997df4ce787c88f77b\""
    },
    "AssetParameters78c6c543950d291c65bd8531ad03fec49d28be9221a7a0a3407021fc394cf013S3Bucket7CA0B04C": {
      "Type": "String",
      "Description": "S3 bucket for asset \"78c6c543950d291c65bd8531ad03fec49d28be9221a7a0a3407021fc394cf013\""
    },
    "AssetParameters78c6c543950d291c65bd8531ad03fec49d28be9221a7a0a3407021fc394cf013S3VersionKey2C610BAB": {
      "Type": "String",
      "Description": "S3 key for asset version \"78c6c543950d291c65bd8531ad03fec49d28be9221a7a0a3407021fc394cf013\""
    },
    "AssetParameters78c6c543950d291c65bd8531ad03fec49d28be9221a7a0a3407021fc394cf013ArtifactHashB7E21320": {
      "Type": "String",
      "Description": "Artifact hash for asset \"78c6c543950d291c65bd8531ad03fec49d28be9221a7a0a3407021fc394cf013\""
    },
    "AssetParameters0910c7386f5de735275c007271606db8ec0f1a05d098c254ffc1cda683bc4924S3BucketE6566285": {
      "Type": "String",
      "Description": "S3 bucket for asset \"0910c7386f5de735275c007271606db8ec0f1a05d098c254ffc1cda683bc4924\""
    },
    "AssetParameters0910c7386f5de735275c007271606db8ec0f1a05d098c254ffc1cda683bc4924S3VersionKey9B4567B4": {
      "Type": "String",
      "Description": "S3 key for asset version \"0910c7386f5de735275c007271606db8ec0f1a05d098c254ffc1cda683bc4924\""
    },
    "AssetParameters0910c7386f5de735275c007271606db8ec0f1a05d098c254ffc1cda683bc4924ArtifactHash779AE738": {
      "Type": "String",
      "Description": "Artifact hash for asset \"0910c7386f5de735275c007271606db8ec0f1a05d098c254ffc1cda683bc4924\""
    }
  },
  "Outputs": {
    "itemsApiEndpoint8392E274": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "itemsApi28111E1C"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "itemsApiDeploymentStageprodE77B897D"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}